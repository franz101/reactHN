{"version":3,"sources":["serviceWorker.ts","services/cacheHelper.ts","services/node-hnapi.ts","features/collection/collectionSlice.ts","features/item/itemSlice.ts","features/user/userSlice.ts","reducers/index.ts","store.ts","helpers.tsx","components/Story/Story.tsx","components/Loading/Loading.tsx","components/Pagination/Pagination.tsx","components/Collection/index.ts","components/Collection/Collection.tsx","features/collection/Collection.tsx","components/Comment/Comment.tsx","components/Comments/Comments.tsx","components/Item/index.ts","components/Item/Item.tsx","components/User/User.tsx","components/Navigation/Navigation.tsx","index.tsx","features/default/Default.tsx","features/item/Item.tsx","features/user/User.tsx","components/About/About.tsx","components/NoMatch/NoMatch.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","categoriesLookup","0","1","2","3","4","5","6","calculateIndex","id","Math","floor","getCategoryPrediction","index","textInput","cellsFlattend","split","rows","result","length","push","splice","reverse","row","parseFloat","slice","API_URL","api","getCollection","type","page","Promise","resolve","reject","fetch","res","json","data","err","getItem","getUser","getCategoryForIdCached","a","method","mode","credentials","text","csvData","predictions","prediction","predictionMax","max","predictionCat","indexOf","getCategory","headers","Accept","body","JSON","stringify","category","join","collectionsSlice","createSlice","name","initialState","news","show","ask","newest","jobs","isFetching","reducers","requestList","receiveList","action","payload","actions","itemSlice","item","requestItem","receiveItem","userSlice","user","requestUser","receiveUser","rootReducer","combineReducers","collections","collectionSlice","items","store","configureStore","reducer","renderMarkup","markup","__html","dompurify","sanitize","scrollToTop","scrollTo","discussion","comments_count","getPath","getLinkUrl","string","URL","e","isValidUrl","url","setTitle","title","document","ucFirst","charAt","toUpperCase","Story","props","perPage","position","Number","discussionLabel","useState","setCategory","useEffect","getCat","cat","className","style","flexBasis","flexShrink","href","domain","StoryLink","points","to","time_ago","Loading","top","left","fontSize","role","aria-label","Pagination","prevUrl","nextUrl","lineHeight","onClick","Collection","collection","path","pageNumber","toString","renderStories","map","key","content","replace","renderContent","CollectionFeature","useParams","useSelector","dispatch","useDispatch","Comment","comment","minWidth","paddingLeft","level","dangerouslySetInnerHTML","comments","Comments","Item","renderItem","renderComments","User","created","karma","undefined","rating","label","icon","repeat","getRating","renderRating","about","links","dest","navLinkClass","Navigation","link","activeClassName","root","basename","exact","process","component","render","source","pathname","ReactDOM","getElementById","origin","addEventListener","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fc1217b5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","const fileName = \"30256320.csv\";\nconst exampleText =\n  \"53.0,1.36,0.54,79.42,0.53,0.61,1.67,15.87,48.0,0.41,1.65,86.36,1.07,0.3,0.78,9.43,35.0,0.81,0.89,32.08,1.98,0.36,1.14,62.74,34.0,62.52,0.48,0.63,23.72,1.45,6.01,5.19,26.0,0.41,0.34,1.69,5.48,0.2,0.46,91.42\";\n\nconst categoriesLookup = {\n  0: \"CULTURE & ARTS\",\n  1: \"EDUCATION\",\n  2: \"BUSINESS\",\n  3: \"HEALTH & LIVING\",\n  4: \"SPORTS\",\n  5: \"NEWS & POLITICS\",\n  6: \"TECH & SCIENCE\",\n};\n\n/* the data is chunked by 64\n so when the id is 562356 you take the closest multiple of 64. which is 562304. That is the name of the file 562304.csv */\nconst calculateIndex = (id) => {\n  return Math.floor(id / 64) * 64;\n};\n\n/*\ngiven the id and the content of the file return the result as a json */\nconst getCategoryPrediction = (index: number, textInput: string) => {\n  //7 categories\n  const size = 7 + 1;\n  const cellsFlattend = textInput.split(\",\");\n  const rows: string[][] = [];\n  const result = {};\n\n  //We want to reshape the cells of text\n  //From shape (64)\n  //To shape   (8,8)\n  while (cellsFlattend.length) {\n    rows.push(cellsFlattend.splice(0, size));\n  }\n  //sort ascending\n  rows.reverse();\n\n  //parse the results\n  for (const row of rows) {\n    // id: probabilties\n    result[index + parseFloat(row[0])] = row.slice(1);\n  }\n  return result;\n};\n\nconst listProbalitiesForPrediction = (prediction) => {\n  const predictionProbalities = {};\n  for (let i = 0; i < prediction.length; i++) {\n    predictionProbalities[categoriesLookup[i]] = prediction[i];\n  }\n  return predictionProbalities;\n};\n\nexport const getCategoryForIdCached = async (id: number) => {\n  const index = calculateIndex(id);\n  const csvData = await new Promise<any>((resolve, reject) => {\n    // post request using fetch\n    fetch(\n      `https://franz101.github.io/hn_topic_data/predictions/export/${index}.csv`,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"omit\",\n      }\n    )\n      .then((res) => res.text())\n      .then((data: any) => {\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n\n  const predictions = getCategoryPrediction(index, csvData);\n  const prediction = predictions[id];\n  const predictionMax = Math.max(...prediction);\n  const predictionCat = prediction.indexOf(predictionMax + \"\");\n  return (\n    categoriesLookup[predictionCat] + \" (\" + predictionMax + \"%)\"\n    //\\n\" +\n    //JSON.stringify(listProbalitiesForPrediction(prediction))\n  );\n};\n","import { CollectionType } from \"../features/collection/collectionSlice\";\nimport { getCategoryForIdCached } from \"./cacheHelper\";\n\nconst API_URL = \"https://node-hnapi.herokuapp.com/\";\n\nexport interface Urlable {\n  id: number;\n  user: string;\n  time: number;\n  time_ago: string;\n}\n\nexport interface Story extends Urlable {\n  id: number;\n  title: string;\n  domain: string;\n  points: number;\n  user: string;\n  time: number;\n  time_ago: string;\n  type: string;\n  comments_count: number;\n  url: string;\n}\n\nexport type Collection = Story[];\n\nexport interface Item extends Story {\n  comments: Comment[];\n  content: string;\n}\n\nexport interface Comment extends Urlable {\n  level: number;\n  user: string;\n  time_ago: string;\n  content: string;\n  comments: Comment[];\n}\n\nexport interface User {\n  id: string;\n  created_time: number;\n  created: string;\n  karma: number;\n  avg: null;\n  about: string;\n}\n\nexport const api = {\n  getCollection: (type: CollectionType, page: string) => {\n    return new Promise<Collection>((resolve, reject) => {\n      fetch(`${API_URL}${type}?page=${page}`)\n        .then((res) => res.json())\n        .then((data: Item[]) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getItem: (id: string) => {\n    return new Promise<Item>((resolve, reject) => {\n      fetch(`${API_URL}item/${id}`)\n        .then((res) => res.json())\n        .then((data: Item) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getUser: (id: string) => {\n    return new Promise<User>((resolve, reject) => {\n      fetch(`${API_URL}user/${id}`)\n        .then((res) => res.json())\n        .then((data: User) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getCategoryForIdCached,\n\n  getCategory: (text: string) => {\n    return new Promise<any>((resolve, reject) => {\n      // post request using fetch\n      fetch(`http://127.0.0.1:8000/category`, {\n        method: \"POST\",\n        mode: \"cors\",\n        credentials: \"omit\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          text: text,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data: any) => {\n          console.log(data);\n          resolve(data.category.slice(0, 2).join(\", \"));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { Collection as CollectionModel, api } from '../../services/node-hnapi';\n\nexport interface Collections {\n    news: CollectionModel,\n    newest: CollectionModel,\n    show: CollectionModel,\n    ask: CollectionModel,\n    jobs: CollectionModel,\n}\n  \nexport type CollectionType = keyof Collections;\n\nexport interface CollectionsState extends Collections {\n    isFetching: boolean\n}\n\nconst initialState: CollectionsState = {\n    news: [],\n    show: [],\n    ask: [],\n    newest: [],\n    jobs: [],\n    isFetching: false\n}\n\nconst collectionsSlice = createSlice({\n    name: 'collections',\n    initialState,\n    reducers: {\n        requestList: state => {\n            state.isFetching = true;\n        },\n        receiveList: (state, action: PayloadAction<{type: CollectionType, data: CollectionModel}>) => {\n            const { type, data } = action.payload;\n            state.isFetching = false;\n            state[type] = data;\n        },\n    },\n});\n\nexport const { requestList, receiveList } = collectionsSlice.actions;\n\nexport default collectionsSlice.reducer;\n\nexport const getCollection = (\n    type: keyof Collections, \n    page: string\n): AppThunk => async dispatch => {\n    dispatch(requestList());\n    api.getCollection(type, page)\n        .then((data) => {\n            dispatch(receiveList({type, data}))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { Item as ItemModel, api } from '../../services/node-hnapi';\n\nexport interface Items {\n    item: ItemModel\n}\n\nexport interface ItemState extends Items {\n    isFetching: boolean,\n}\n\nconst initialState: ItemState = {\n    isFetching: false,\n    item: {} as ItemModel\n}\n\nconst itemSlice = createSlice({\n    name: 'items',\n    initialState,\n    reducers: {\n        requestItem: state => {\n            state.isFetching = true;\n        },\n        receiveItem: (state, action: PayloadAction<{ id: string, data: ItemModel}>) => {\n            const { id, data } = action.payload;\n            state.isFetching = false;\n            state.item = data;\n        },\n    },\n});\n\nexport const { requestItem, receiveItem } = itemSlice.actions;\n\nexport default itemSlice.reducer;\n\nexport const getItem = (id: string): AppThunk => async dispatch => {\n    dispatch(requestItem());\n    api.getItem(id)\n        .then((data) => {\n            dispatch(receiveItem({ id, data }))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { User as UserModel, api } from '../../services/node-hnapi';\n\nexport interface User {\n    user: UserModel\n}\n\nexport interface UserState extends User {\n    isFetching: boolean,\n}\n\nconst initialState: UserState = {\n    isFetching: false,\n    user: {} as UserModel\n}\n\nconst userSlice = createSlice({\n    name: 'item',\n    initialState,\n    reducers: {\n        requestUser: state => {\n            state.isFetching = true;\n        },\n        receiveUser: (state, action: PayloadAction<UserModel>) => {\n            state.isFetching = false;\n            state.user = action.payload;\n        },\n    },\n});\n\nexport const { requestUser, receiveUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n\nexport const getUser = (id: string): AppThunk => async dispatch => {\n    dispatch(requestUser());\n    api.getUser(id)\n        .then((data) => {\n            dispatch(receiveUser(data))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { combineReducers } from 'redux';\nimport collectionSlice from '../features/collection/collectionSlice';\nimport itemSlice from '../features/item/itemSlice';\nimport userSlice from '../features/user/userSlice';\n\nconst rootReducer = combineReducers({\n  collections: collectionSlice,\n  items: itemSlice,\n  user: userSlice\n});\n\nexport default rootReducer;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport reducer from './reducers';\n\nexport const store = configureStore({reducer});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;","import dompurify from \"dompurify\";\nimport { Story, Urlable } from \"./services/node-hnapi\";\n\nexport const renderMarkup = (markup: string): { __html: string } => {\n  return { __html: dompurify.sanitize(markup) };\n};\n\nexport const scrollToTop = (): void => {\n  window.scrollTo(0, 0);\n};\n\nexport const discussion = (data: Story): string => {\n  if (data.type === \"job\") return \"\";\n  if (data.comments_count > 0) {\n    return `${data.comments_count} ${\n      data.comments_count === 1 ? \"comment \" : \"comments \"\n    }`;\n  }\n  return \"discuss\";\n};\n\nexport const getPath = (data: Urlable): string => `/item/${data.id}`;\n\nconst isValidUrl = (string: string): boolean => {\n  try {\n    new URL(string);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const getLinkUrl = (data: Story): string =>\n  isValidUrl(data.url) ? data.url : getPath(data);\n\nexport const setTitle = (title: string): void => {\n  document.title = `${title ? ucFirst(title) + \" - \" : \"\"} React HN`;\n};\n\nexport const ucFirst = (string: string): string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getLinkUrl, getPath, discussion } from \"../../helpers\";\nimport { api, Story as StoryModel } from \"../../services/node-hnapi\";\n\nconst StoryLink = (data: StoryModel) => (\n  <a\n    href={getLinkUrl(data)}\n    className=\"bg-blue-150 hover:bg-blue-500 dark:bg-blue-100 rounded-sm p-1 break-words visited:bg-white hover:text-gray-700 dark:text-gray-100 dark-hover:text-gray-700\"\n  >\n    {data.title}\n    &nbsp;\n    {data.domain && <span className=\"break-words\">({data.domain})</span>}\n  </a>\n);\n\ninterface Props {\n  perPage: number;\n  index: number;\n  page: string;\n  data: StoryModel;\n}\n\nexport const Story = (props: Props): JSX.Element => {\n  const { data, index, page } = props;\n  const perPage = props.perPage || 30;\n  const position = index + 1 + (Number(page) - 1) * perPage;\n  const discussionLabel = discussion(data);\n  const [category, setCategory] = useState(\"loading...\");\n\n  useEffect(() => {\n    const getCat = async () => {\n      try {\n        const cat = await api.getCategoryForIdCached(data.id);\n        //      const cat = await api.getCategory(data.title);\n\n        setCategory(cat);\n      } catch (error) {\n        setCategory(\"failed\");\n      }\n    };\n    try {\n      getCat();\n    } catch (error) {\n      setCategory(\"error\");\n    }\n  }, [data.id]);\n\n  return (\n    <div className=\"flex py-4 border-solid border-gray-100 dark:border-b-0 border-b\">\n      <div\n        className=\"flex content-center items-center justify-center text-gray-600 dark:text-gray-100\"\n        style={{ flexBasis: \"3rem\", flexShrink: 0 }}\n      >\n        {position}\n      </div>\n      <div className=\"w-full pl-1\">\n        <div className=\"mb-1\">{StoryLink(data)}</div>\n        <div className=\"pl-1 text-sm text-gray-700 dark:text-gray-300\">\n          {data.points && (\n            <span>\n              {data.points} {data.points === 1 ? \"point \" : \"points \"}\n              by&nbsp;\n              <Link to={`/user/${data.user}`} className=\"hover:underline\">\n                {data.user}\n              </Link>\n              &nbsp;\n            </span>\n          )}\n          <span className=\"md:inline-block\">\n            <Link to={getPath(data)} className=\"hover:underline\">\n              {data.time_ago}\n            </Link>\n          </span>\n          <Fragment>\n            <div className=\"hidden md:inline\">&nbsp;|&nbsp;</div>\n            {category}\n          </Fragment>\n          {discussionLabel && (\n            <Fragment>\n              <div className=\"hidden md:inline\">&nbsp;|&nbsp;</div>\n              <div className=\"md:inline-block\">\n                <Link to={getPath(data)} className=\"hover:underline\">\n                  {discussionLabel}\n                </Link>\n              </div>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport CSS from 'csstype';\n\nexport const Loading = (): JSX.Element => {\n    const styles: CSS.Properties = {\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      fontSize: \"2rem\"\n    };\n    return (\n      <div style={styles}>\n        <span role=\"img\" aria-label=\"loading…\">🙈</span>\n      </div>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers';\n\ninterface IPaginationProps {\n  type: string,\n  page: string\n}\n\nexport const Pagination = (props: IPaginationProps): JSX.Element => {\n  const page = Number(props.page);\n  const prevUrl = `/${props.type}/${(page - 1) > 1 ? page - 1 : 1}`;\n  const nextUrl = `/${props.type}/${page + 1}`;\n  const total = 10; // max limit of hnapi\n\n  return (\n    <div\n      className=\"bg-white dark:bg-gray-600 p-3 flex text-center dark:text-white\"\n      style={{\n        lineHeight: \"1\",\n      }}\n    >\n      <Link\n        to={prevUrl}\n        onClick={() => scrollToTop()}\n        className=\"flex-1 inline-block text-gray-600 dark:text-white p-3 hover:text-blue-500 border-transparent border-b-2\"\n      >\n        {page > 1 ? 'prev' : '' }\n      </Link>\n      <span className=\"p-3 flex-1\">&nbsp;{page || 1} / {total}&nbsp;</span>\n        <Link\n          to={nextUrl}\n          onClick={() => scrollToTop()}\n          className=\"flex-1 inline-block text-gray-600 dark:text-white p-3 hover:text-blue-500 border-transparent border-b-2\"\n        >\n          {page !== total ? 'more' : '' }\n        </Link>\n    </div>\n  );\n}","import { Collection } from './Collection';\n\nexport default Collection;","import React from 'react';\nimport Story from '../Story';\nimport Loading from '../Loading';\nimport Pagination from '../Pagination';\n\nimport { \n  Story as StoryModel,\n  Collection as CollectionModel\n} from '../../services/node-hnapi';\n\nimport { CollectionType } from '../../features/collection/collectionSlice';\n\ninterface Props {\n  type: CollectionType,\n  collection: CollectionModel\n  isFetching: boolean,\n  path?: string,\n  page: number\n}\n\nexport const Collection = (props: Props) => {\n\n  const {\n    type,\n    collection,\n    isFetching,\n    path,\n    page = '1',\n  } = props;\n\n  const pageNumber: string = page.toString() || '1';\n\n  const renderList = (data: StoryModel[], perPage: number) => {\n    return (\n      <div>\n        <ol>\n          {renderStories(data, perPage)}\n        </ol>\n      </div>\n    );\n  }\n\n  const renderStories = (data: StoryModel[], perPage: number) => {\n    return data.map((data, index: number) => (\n      <li key={index}>\n        <Story\n          key={index}\n          index={index}\n          data={data}\n          page={pageNumber}\n          perPage={perPage}\n        />\n      </li>\n    ));\n  }\n\n  const renderContent = (content: StoryModel[]) => {\n\n    if (isFetching) {\n      return <Loading />;\n    }\n    \n    if (content.length > 0) {\n      return (\n        <div>\n          {renderList(content, content.length)}\n          <div className=\"my-4\">\n            <Pagination \n              page={pageNumber ? pageNumber : '1'} \n              type={type}\n            />\n          </div>\n        </div>\n      );\n    }\n    else if (!isFetching && path) {\n      const url = path.replace(':page?', (Number(pageNumber) - 1).toString());\n      return (\n        <div className=\"p-4 bg-white dark:bg-gray-500\">\n          <p>There's nothing to show here…</p>\n          <a href={url}>\n            Try the previous page?\n          </a>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      {renderContent(collection)}\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getCollection, CollectionType } from './collectionSlice';\nimport { scrollToTop, setTitle } from '../../helpers';\nimport Collection from '../../components/Collection';\n\nexport interface Props {\n    type: CollectionType\n}  \n\nexport const CollectionFeature = (props: Props) => {\n\n    const { type } = props;\n    const { path, page } = useParams();\n    const { collections } = useSelector((state: RootState) => state);\n    const dispatch = useDispatch();\n    \n    const pageNumber: string = page?.toString() || '1';\n    \n    useEffect(() => {\n        scrollToTop();\n    },[]);\n\n    useEffect(() => {\n        setTitle(type === 'news' ? 'Top' : type);\n        dispatch(getCollection(type, pageNumber));\n    }, [type, pageNumber, dispatch]);\n\n    if (Number(page) > 10 && path) {\n        return (\n          <Redirect to={path.replace(':page', '10')} />\n        );\n      }\n\n    return (\n        <Collection\n            type={type}\n            collection={collections[type]}\n            isFetching={collections.isFetching}\n            page={Number(page) || 1}\n            path={path}\n        />\n    )\n}","import React from 'react';\nimport Comments from '../Comments';\nimport { Link } from 'react-router-dom';\nimport { renderMarkup, getPath } from '../../helpers';\nimport { Comment as CommentModel } from '../../services/node-hnapi';\n\ninterface ICommentProps {\n  data: CommentModel\n}\n\nexport const Comment = (props: ICommentProps): JSX.Element => {\n  const { data: comment } = props;\n  return (\n    <div\n      style={{\n        minWidth: '15rem',\n        paddingLeft: comment.level < 50 ? `${comment.level / 2}rem` : 0\n      }}\n    >\n      <div className=\"mb-4\">\n        <div className=\"text-gray-600 dark:text-gray-300 mb-2 flex flex-wrap\">\n          <Link\n            className=\"underline pb-4 break-all sm:break-normal\"\n            to={`/user/${comment.user}`}\n          >\n            {comment.user}\n          </Link>&nbsp;\n          <Link\n            className=\"hover:underline pb-4\"\n            to={getPath(comment)}\n          >\n            <span className=\"\">{comment.time_ago}</span>\n          </Link>\n        </div>\n        <div\n          className=\"overflow-x-auto\"\n          dangerouslySetInnerHTML={renderMarkup(comment.content)}\n        />\n      </div>\n      {comment.comments.length > 0\n        ? <Comments data={comment.comments} />\n        : ''\n      }\n    </div>\n  );\n}","import React from 'react';\nimport Comment from '../Comment';\nimport { Comment as CommentModel } from '../../services/node-hnapi';\n\ninterface ICommentsProps {\n  data: CommentModel[]\n}\n\nexport const Comments = (props: ICommentsProps): JSX.Element => {\n  const { data: comments } = props;\n  return (\n    <ul className=\"comments__list\">\n      {comments.map((comment, index) => (\n        <li\n          key={index}\n          className=\"comments__listItem\"\n        >\n          <Comment data={comment} />\n        </li>\n      ))}\n    </ul>\n  );\n}","import { Item } from './Item';\n\nexport default Item;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport  Comments from '../Comments';\nimport { discussion } from '../../helpers';\nimport { Item as ItemModel } from '../../services/node-hnapi';\nimport {\n  renderMarkup,\n  getLinkUrl,\n} from '../../helpers';\n\ninterface Props {\n  item: ItemModel\n  isFetching: boolean\n}\n\nexport const Item = (props: Props) => {\n\n  const { item, isFetching } = props;\n  const discussionLabel = discussion(item);\n\n  const renderItem = (data: ItemModel) => {\n    if (data && data.comments) {\n      return (\n        <div className=\"p-4 dark:p-1 dark:px-2 bg-white dark:bg-gray-600\">\n          <h1 className=\"text-2xl font-bold mb-4\">\n            <a\n              className=\"bg-blue-100 hover:bg-blue-150 rounded-sm p-1 -m-1 inline-flex items-center flex-wrap break-all sm:break-normal visited:bg-white dark:text-gray-100 dark:hover:text-gray-700\"\n              href={getLinkUrl(data)}\n            >\n              <span>\n                {data.title}\n              </span>\n              {data.domain &&\n                <Fragment>\n                  &nbsp;\n                  <span className=\"text-base\">({data.domain})</span>\n                </Fragment>\n              }\n            </a>\n          </h1>\n          <div className=\"text-gray-600 dark:text-gray-300\">\n            {data.points && (\n              <span>\n                <span className=\"break-all sm:break-normal\">\n                  {data.points} {data.points === 1 ? 'point ' : 'points '}\n                  <span>by</span> <Link className=\"dark:underline\" to={`/user/${data.user}`}>{data.user}</Link>\n                  {discussionLabel &&\n                    <span className=\"inline-block\">\n                      &nbsp;{discussionLabel}\n                    </span>\n                  }\n                </span>\n              </span>\n            )}\n          </div>\n          <div\n            className=\"mt-3\"\n            dangerouslySetInnerHTML={renderMarkup(data.content)}\n          />\n        </div>\n      );\n    }\n    if (!isFetching) {\n      return (\n        <p>Nothing to show…</p>\n      )\n    }\n  }\n\n  const renderComments = (data: ItemModel) => {\n    return (\n      <div className=\"my-4 py-2 px-4 dark:px-2 bg-white dark:bg-gray-600 overflow-x-auto\">\n          <Comments data={data.comments} />\n      </div>\n    );\n  }\n\n  const renderContents = (data: ItemModel) => {\n    return (\n      <div className={isFetching ? 'opacity-25' : ''}>\n        { renderItem(data) }\n        {\n          data.comments && data.comments.length > 0\n            ? renderComments(data)\n            : ''\n        }\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {renderContents(item)}\n    </div>\n  );\n}","import React from 'react';\n\nimport { renderMarkup } from '../../helpers';\nimport { User as UserModel } from '../../services/node-hnapi';\n\nimport Loading from '../../components/Loading';\n\ninterface Props {\n  user: UserModel,\n  isFetching: boolean\n}\n\nexport const User = (props: Props) => {\n\n  const getRating = (karma: number): { label: string; icon: string } => {\n    const length = karma.toString().length;\n    if (karma > 100) {\n      return { label: 'great rating', icon: '🔥'.repeat(length) };\n    } else if (karma < 0) {\n      return { label: 'bad rating', icon: '💩'.repeat(length - 1) };\n    } else if (karma === 0 || !karma) {\n      return { label: 'new user', icon: '🆕' };\n    }\n    return { label: 'good rating', icon: '👍'.repeat(length) };\n  }\n\n  const renderRating = (karma: number) => {\n    if (karma === undefined) return;\n    const rating = getRating(karma);\n    return (\n      <span\n        role=\"img\"\n        aria-label={`${rating.label}`}\n        title={rating.label}\n      >\n        {rating.icon}\n      </span>\n    );\n  }\n\n  const renderUser = (data: UserModel) => {\n    return (\n      <div className=\"bg-white dark:bg-gray-600 p-1\">\n        <h1 className=\"text-2xl font-bold mb-3 text-gray-600 dark:text-white\">{data.id}</h1>\n        <div className=\"mb-3 text-gray-600 dark:text-white\">\n          <div>\n            <span className=\"font-bold\">Created:</span>&nbsp;\n            {data.created}\n          </div>\n          <div>\n            <span className=\"font-bold\">Karma:</span>&nbsp;\n            {data.karma} {renderRating(data.karma)}\n          </div>\n        </div>\n        <div className=\"text-gray-600 dark:text-white\" dangerouslySetInnerHTML={renderMarkup(data.about)} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {props.isFetching \n        ? <Loading /> \n        : renderUser(props.user)\n      }\n    </div>\n  );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers';\n\nconst links: { dest: string, label: string }[] = [\n  {\n    dest: \"/news\",\n    label: \"top\"\n  },\n  {\n    dest: \"/newest\",\n    label: \"new\"\n  },\n  {\n    dest: \"/show\",\n    label: \"show\"\n  },\n  {\n    dest: \"/ask\",\n    label: \"ask\"\n  },\n  {\n    dest: \"/jobs\",\n    label: \"jobs\"\n  }\n];\n\nconst navLinkClass = 'inline-block text-white p-3 hover:text-blue-500 border-transparent border-b-2';\nconst navLinkActiveClass = 'border-blue-500 text-blue-500';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    className=\"sm:sticky top-0 bg-black-600\"\n    onClick={() => scrollToTop()}\n  >\n    <div className=\"max-w-screen-lg mx-auto\">\n      <ul className=\"flex flex-col sm:flex-row items-center flex-wrap\">\n        {links.map((link, index) => (\n          <li key={index}>\n            <NavLink\n              to={link.dest}\n              className={navLinkClass}\n              activeClassName={navLinkActiveClass}\n            >\n              {link.label}\n            </NavLink>\n          </li>\n        ))}\n        <li className=\"sm:ml-auto\">\n          <NavLink to=\"/about\"\n            className={navLinkClass}\n            activeClassName={navLinkActiveClass}\n          >\n            about\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { CollectionFeature } from \"./features/collection/Collection\";\nimport { ItemFeature } from \"./features/item/Item\";\nimport { UserFeature } from \"./features/user/User\";\nimport { DefaultFeature } from \"./features/default/Default\";\n\nimport Navigation from \"./components/Navigation\";\nimport About from \"./components/About\";\nimport NoMatch from \"./components/NoMatch\";\n\nconst root: JSX.Element = (\n  <Provider store={store}>\n    <Router basename=\"/reactHN/build\">\n      <div>\n        <Navigation />\n        <main>\n          <div className=\"max-w-screen-lg my-4 mx-auto\">\n            <Switch>\n              <Route\n                exact\n                path={`${process.env.PUBLIC_URL}/`}\n                component={DefaultFeature}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/item/:id`}\n                component={ItemFeature}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/user/:id`}\n                component={UserFeature}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/news/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"news\" />}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/newest/:page?`}\n                render={(props) => (\n                  <CollectionFeature {...props} type=\"newest\" />\n                )}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/show/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"show\" />}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/ask/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"ask\" />}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/jobs/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"jobs\" />}\n              />\n              <Route\n                exact\n                path={`${process.env.PUBLIC_URL}/about`}\n                component={About}\n              />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(root, document.getElementById(\"root\"));\nserviceWorker.register();\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const DefaultFeature: React.FC = () => (\n  <Redirect to=\"/news/1\" />\n)","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getItem } from '../../features/item/itemSlice';\nimport Item from '../../components/Item';\n\nimport {\n    scrollToTop,\n    setTitle\n} from '../../helpers';\n\nexport const ItemFeature = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const { item, isFetching } = useSelector((state: RootState) => state.items);\n\n    useEffect(() => {\n        scrollToTop();\n      }, [])\n\n    useEffect(() => {\n    if (id) {\n        dispatch(getItem(id));\n    }\n    }, [id, dispatch])\n\n    useEffect(() => {\n        if (item && item.title) {\n          setTitle(item.title)\n        }\n      }, [item])\n\n    return (\n        <Item\n            item={item}\n            isFetching={isFetching}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getUser } from '../../features/user/userSlice';\nimport User from '../../components/User';\n\nexport const UserFeature = () => {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const { user: data } = useSelector((state: RootState) => state);\n\n    useEffect(() => {\n        if (id) {\n            dispatch(getUser(id))\n        }\n    }, [id, dispatch])\n\n    return (\n        <User\n            user={data.user}\n            isFetching={data.isFetching}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { setTitle } from '../../helpers';\nimport raw from 'raw.macro';\nimport Markdown from 'react-remarkable';\nconst markdown = raw(\"../../../README.md\");\n\nexport const About: React.FC = () => {\n  useEffect(() => {\n    setTitle('about')\n  })\n\n  return (\n    <div className=\"About\">\n      <Markdown source={markdown} />\n      <p className=\"dark:text-white\">\n        View the source code on <a className=\"dark:hover:text-gray-700\" href=\"https://github.com/ptibbetts/reactHN\">GitHub</a>\n      </p>\n      <p className=\"dark:text-white\">\n        <a\n          className=\"<3\"\n          href=\"https://paultibbetts.uk\"\n        >\n          <span role=\"img\" aria-label=\"love\">💙</span>\n        </a>\n      </p>\n    </div>\n  )\n};","import React from 'react';\n\ninterface INoMatchProps {\n  location: {\n    pathname: string\n  }\n}\n\nexport const NoMatch = ({ location }: INoMatchProps) => (\n  <h1 className=\"font-bold text-gray-700 dark:text-white text-2xl\">Nothing was found for \"{location.pathname}\".</h1>\n);"],"sourceRoot":""}