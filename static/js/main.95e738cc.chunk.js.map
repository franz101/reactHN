{"version":3,"sources":["serviceWorker.ts","services/node-hnapi.ts","features/collection/collectionSlice.ts","features/item/itemSlice.ts","features/user/userSlice.ts","reducers/index.ts","store.ts","helpers.tsx","components/Story/Story.tsx","components/Loading/Loading.tsx","components/Pagination/Pagination.tsx","components/Collection/index.ts","components/Collection/Collection.tsx","features/collection/Collection.tsx","components/Comment/Comment.tsx","components/Comments/Comments.tsx","components/Item/index.ts","components/Item/Item.tsx","components/User/User.tsx","components/Navigation/Navigation.tsx","components/Topics/Collection.tsx","components/Topics/index.ts","components/Topics/Topics.tsx","index.tsx","features/default/Default.tsx","features/item/Item.tsx","features/user/User.tsx","components/About/About.tsx","components/NoMatch/NoMatch.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TopicModel","API_URL","LAMBDA_TOPIC_URL","api","updateIndex","fetch","getCollection","type","page","Promise","resolve","reject","res","json","data","err","getItem","id","getUser","getCollectionByCategory","topic","a","fetchPage","map","item","ID","getCategory","text","method","mode","credentials","headers","Accept","body","JSON","stringify","texts","prediction","predictions","label","score","toFixed","collectionsSlice","createSlice","name","initialState","news","show","ask","newest","jobs","business","isFetching","reducers","requestList","receiveList","action","payload","actions","itemSlice","requestItem","receiveItem","userSlice","user","requestUser","receiveUser","rootReducer","combineReducers","collections","collectionSlice","items","store","configureStore","reducer","renderMarkup","markup","__html","dompurify","sanitize","scrollToTop","scrollTo","discussion","comments_count","getPath","getLinkUrl","string","URL","e","isValidUrl","url","setTitle","title","document","ucFirst","charAt","toUpperCase","slice","Story","props","index","perPage","position","Number","discussionLabel","useState","category","setCategory","useEffect","getCat","cat","comments","length","content","replace","className","style","flexBasis","flexShrink","href","domain","StoryLink","points","to","time_ago","Loading","top","left","fontSize","role","aria-label","Pagination","prevUrl","nextUrl","lineHeight","onClick","Collection","collection","path","pageNumber","toString","renderStories","key","renderContent","CollectionFeature","useParams","useSelector","dispatch","useDispatch","Comment","comment","minWidth","paddingLeft","level","dangerouslySetInnerHTML","Comments","Item","renderItem","renderComments","User","created","karma","undefined","rating","icon","repeat","getRating","renderRating","about","links","dest","navLinkClass","Navigation","link","activeClassName","Topics","exampleCollection","setIsCollection","fetchTopics","topicResponse","prevState","Object","values","entries","topicCollection","root","exact","component","render","source","pathname","ReactDOM","getElementById","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.95e738cc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import { CollectionType } from \"../features/collection/collectionSlice\";\n\nconst API_URL = \"https://node-hnapi.herokuapp.com/\";\nconst LAMBDA_CLASSIFY_URL =  `https://djqzjo0u82.execute-api.us-east-2.amazonaws.com/prod/hn_predictions`\nconst LAMBDA_TOPIC_URL =  `https://mohp3enuma.execute-api.us-east-2.amazonaws.com`\n\nexport interface Urlable {\n  id: number;\n  user: string;\n  time: number;\n  time_ago: string;\n}\n\nexport enum TopicModel  {\n  BUSINESS=\"BUSINESS\",\n  HEALTH=\"HEALTH & LIVING\",\n  CULTURE=\"CULTURE & ARTS\",\n  EDUCATION=\"EDUCATION\",\n  SPORTS=\"SPORTS\",\n  NEWS=\"NEWS & POLITICS\",\n  TECH=\"TECH & SCIENCE\",\n}\n\nexport interface Story extends Urlable {\n  id: number;\n  title: string;\n  domain: string;\n  points: number;\n  user: string;\n  time: number;\n  time_ago: string;\n  type: string;\n  comments_count: number;\n  url: string;\n  label?: string;\n  score?: number;\n}\n\nexport type Collection = Story[];\n\nexport interface Item extends Story {\n  comments: Comment[];\n  content: string;\n}\n\nexport interface Comment extends Urlable {\n  level: number;\n  user: string;\n  time_ago: string;\n  content: string;\n  comments: Comment[];\n}\n\nexport interface User {\n  id: string;\n  created_time: number;\n  created: string;\n  karma: number;\n  avg: null;\n  about: string;\n}\n\nexport const api = {\n  updateIndex: ()=>fetch(LAMBDA_TOPIC_URL),\n  getCollection: (type: CollectionType, page: string) => {\n    return new Promise<Collection>((resolve, reject) => {\n      fetch(`${API_URL}${type}?page=${page}`)\n        .then((res) => res.json())\n        .then((data: Item[]) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getItem: (id: string) => {\n    return new Promise<Item>((resolve, reject) => {\n      fetch(`${API_URL}item/${id}`)\n        .then((res) => res.json())\n        .then((data: Item) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getUser: (id: string) => {\n    return new Promise<User>((resolve, reject) => {\n      fetch(`${API_URL}user/${id}`)\n        .then((res) => res.json())\n        .then((data: User) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getCollectionByCategory: async (topic: TopicModel, page: string) => {\n\n  \n    const fetchPage = () =>\n      new Promise<Collection>((resolve, reject) => {\n        fetch(`${LAMBDA_TOPIC_URL}/topics/${topic}?page=${page}`)\n          .then((res) => res.json())\n          .then((data) => {\n            resolve(data.map(item=>{\n              if(item.ID){\n                item.id =item.ID\n              }\n              return item  \n            }) as Item[] );\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n\n    return fetchPage();\n  },\n\n\n  getCategory: (text: string) => {\n    return new Promise<any>((resolve, reject) => {\n      // post request using fetch\n      fetch(LAMBDA_CLASSIFY_URL\n       ,\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          credentials: \"omit\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            texts: [text],\n          }),\n        }\n      )\n        .then((res) => res.json())\n        .then((data: any) => {\n          const prediction = data.predictions[0];\n          resolve(\n            ` ${prediction.label} (${(prediction.score * 100).toFixed(0)}%)  `\n          );\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../../store\";\nimport { Collection as CollectionModel, api, TopicModel } from \"../../services/node-hnapi\";\n\nexport interface Collections {\n  news: CollectionModel;\n  newest: CollectionModel;\n  show: CollectionModel;\n  ask: CollectionModel;\n  jobs: CollectionModel;\n  business: CollectionModel;\n }\n\nexport type CollectionType = keyof Collections;\n\nexport interface CollectionsState extends Collections {\n  isFetching: boolean;\n}\n\nconst initialState: CollectionsState = {\n  news: [],\n  show: [],\n  ask: [],\n  newest: [],\n  jobs: [],\n  business: [],\n  isFetching: false,\n};\n\nconst collectionsSlice = createSlice({\n  name: \"collections\",\n  initialState,\n  reducers: {\n    requestList: (state) => {\n      state.isFetching = true;\n    },\n    receiveList: (\n      state,\n      action: PayloadAction<{ type: CollectionType; data: CollectionModel }>\n    ) => {\n      const { type, data } = action.payload;\n      state.isFetching = false;\n      state[type] = data;\n    },\n  },\n});\n\nexport const { requestList, receiveList } = collectionsSlice.actions;\n\nexport default collectionsSlice.reducer;\n\nexport const getCollectionByCategory = (\n  type: keyof Collections,\n  page: string\n): AppThunk => async (dispatch) => {\n  dispatch(requestList());\n  api\n    .getCollectionByCategory(type as TopicModel, page)\n    .then((data) => {\n      dispatch(receiveList({ type, data }));\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const getCollection = (\n  type: keyof Collections,\n  page: string\n): AppThunk => async (dispatch) => {\n  dispatch(requestList());\n  api\n    .getCollection(type, page)\n    .then((data) => {\n      dispatch(receiveList({ type, data }));\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { Item as ItemModel, api } from '../../services/node-hnapi';\n\nexport interface Items {\n    item: ItemModel\n}\n\nexport interface ItemState extends Items {\n    isFetching: boolean,\n}\n\nconst initialState: ItemState = {\n    isFetching: false,\n    item: {} as ItemModel\n}\n\nconst itemSlice = createSlice({\n    name: 'items',\n    initialState,\n    reducers: {\n        requestItem: state => {\n            state.isFetching = true;\n        },\n        receiveItem: (state, action: PayloadAction<{ id: string, data: ItemModel}>) => {\n            const { id, data } = action.payload;\n            state.isFetching = false;\n            state.item = data;\n        },\n    },\n});\n\nexport const { requestItem, receiveItem } = itemSlice.actions;\n\nexport default itemSlice.reducer;\n\nexport const getItem = (id: string): AppThunk => async dispatch => {\n    dispatch(requestItem());\n    api.getItem(id)\n        .then((data) => {\n            dispatch(receiveItem({ id, data }))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { User as UserModel, api } from '../../services/node-hnapi';\n\nexport interface User {\n    user: UserModel\n}\n\nexport interface UserState extends User {\n    isFetching: boolean,\n}\n\nconst initialState: UserState = {\n    isFetching: false,\n    user: {} as UserModel\n}\n\nconst userSlice = createSlice({\n    name: 'item',\n    initialState,\n    reducers: {\n        requestUser: state => {\n            state.isFetching = true;\n        },\n        receiveUser: (state, action: PayloadAction<UserModel>) => {\n            state.isFetching = false;\n            state.user = action.payload;\n        },\n    },\n});\n\nexport const { requestUser, receiveUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n\nexport const getUser = (id: string): AppThunk => async dispatch => {\n    dispatch(requestUser());\n    api.getUser(id)\n        .then((data) => {\n            dispatch(receiveUser(data))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { combineReducers } from 'redux';\nimport collectionSlice from '../features/collection/collectionSlice';\nimport itemSlice from '../features/item/itemSlice';\nimport userSlice from '../features/user/userSlice';\n\nconst rootReducer = combineReducers({\n  collections: collectionSlice,\n  items: itemSlice,\n  user: userSlice\n});\n\nexport default rootReducer;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport reducer from './reducers';\n\nexport const store = configureStore({reducer});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;","import dompurify from \"dompurify\";\nimport { Story, Urlable } from \"./services/node-hnapi\";\n\nexport const renderMarkup = (markup: string): { __html: string } => {\n  return { __html: dompurify.sanitize(markup) };\n};\n\nexport const scrollToTop = (): void => {\n  window.scrollTo(0, 0);\n};\n\nexport const discussion = (data: Story): string => {\n  if (data.type === \"job\") return \"\";\n  if (data.comments_count > 0) {\n    return `${data.comments_count} ${\n      data.comments_count === 1 ? \"comment \" : \"comments \"\n    }`;\n  }\n  return \"discuss\";\n};\n\nexport const getPath = (data: Urlable): string => `/item/${data.id}`;\n\nconst isValidUrl = (string: string): boolean => {\n  try {\n    new URL(string);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const getLinkUrl = (data: Story): string =>\n  isValidUrl(data.url) ? data.url : getPath(data);\n\nexport const setTitle = (title: string): void => {\n  document.title = `${title ? ucFirst(title) + \" - \" : \"\"} React HN`;\n};\n\nexport const ucFirst = (string: string): string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getLinkUrl, getPath, discussion } from \"../../helpers\";\nimport { api, Story as StoryModel } from \"../../services/node-hnapi\";\n\nconst StoryLink = (data: StoryModel) => (\n  <a\n    href={getLinkUrl(data)}\n    className=\"bg-blue-150 hover:bg-blue-500 dark:bg-blue-100 rounded-sm p-1 break-words visited:bg-white hover:text-gray-700 dark:text-gray-100 dark-hover:text-gray-700\"\n  >\n    {data.title}\n    &nbsp;\n    {data.domain && <span className=\"break-words\">({data.domain})</span>}\n  </a>\n);\n\ninterface Props {\n  perPage: number;\n  index: number;\n  page: string;\n  data: StoryModel;\n}\n\nexport const Story = (props: Props): JSX.Element => {\n  const { data, index, page } = props;\n  const perPage = props.perPage || 30;\n  const position = index + 1 + (Number(page) - 1) * perPage;\n  const discussionLabel = discussion(data);\n  const [category, setCategory] = useState(\"loading...\");\n// eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const getCat = async (data: StoryModel) => {\n      try {\n        //const cat = await api.getCategoryForIdCached(data.id);\n        if(data.label && data.score){\n          setCategory( ` ${data.label} (${(data.score * 100).toFixed(0)}%)  `);\n          return\n        }\n        let cat = await api.getCategory(data.title);\n        setCategory(cat);\n        if(data.id){\n\n          const item = await api.getItem(data.id + \"\");\n          if(item.comments.length > 0) {\n          cat = await api.getCategory(\n            data.title +\n              \"\\n\" +\n              item.comments[0].content.replace(/<[^>]*>?/gm, \"\").slice(0, 100)\n          );\n          setCategory(cat);}\n        }\n      } catch (error) {\n        setCategory(\"-\");\n      }\n    };\n    try {\n      getCat(data);\n    } catch (error) {\n      setCategory(\"error\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data.id,data.title]);\n\n  return (\n    <div className=\"flex py-4 border-solid border-gray-100 dark:border-b-0 border-b\">\n      <div\n        className=\"flex content-center items-center justify-center text-gray-600 dark:text-gray-100\"\n        style={{ flexBasis: \"3rem\", flexShrink: 0 }}\n      >\n        {position}\n      </div>\n      <div className=\"w-full pl-1\">\n        <div className=\"mb-1\">{StoryLink(data)}</div>\n        <div className=\"pl-1 text-sm text-gray-700 dark:text-gray-300\">\n          {data.points && (\n            <span>\n              {data.points} {data.points === 1 ? \"point \" : \"points \"}\n              by&nbsp;\n              <Link to={`/user/${data.user}`} className=\"hover:underline\">\n                {data.user}\n              </Link>\n              &nbsp;\n            </span>\n          )}\n          <span className=\"md:inline-block\">\n            <Link to={getPath(data)} className=\"hover:underline\">\n              {data.time_ago}\n            </Link>\n          </span>\n          <Fragment>\n            <div className=\"hidden md:inline\">&nbsp;|&nbsp;</div>\n            {category}\n          </Fragment>\n          {discussionLabel && (\n            <Fragment>\n              <div className=\"hidden md:inline\">&nbsp;|&nbsp;</div>\n              <div className=\"md:inline-block\">\n                <Link to={getPath(data)} className=\"hover:underline\">\n                  {discussionLabel}\n                </Link>\n              </div>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport CSS from 'csstype';\n\nexport const Loading = (): JSX.Element => {\n    const styles: CSS.Properties = {\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      fontSize: \"2rem\"\n    };\n    return (\n      <div style={styles}>\n        <span role=\"img\" aria-label=\"loading…\">🙈</span>\n      </div>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers';\n\ninterface IPaginationProps {\n  type: string,\n  page: string\n}\n\nexport const Pagination = (props: IPaginationProps): JSX.Element => {\n  const page = Number(props.page);\n  const prevUrl = `/${props.type}/${(page - 1) > 1 ? page - 1 : 1}`;\n  const nextUrl = `/${props.type}/${page + 1}`;\n  const total = 10; // max limit of hnapi\n\n  return (\n    <div\n      className=\"bg-white dark:bg-gray-600 p-3 flex text-center dark:text-white\"\n      style={{\n        lineHeight: \"1\",\n      }}\n    >\n      <Link\n        to={prevUrl}\n        onClick={() => scrollToTop()}\n        className=\"flex-1 inline-block text-gray-600 dark:text-white p-3 hover:text-blue-500 border-transparent border-b-2\"\n      >\n        {page > 1 ? 'prev' : '' }\n      </Link>\n      <span className=\"p-3 flex-1\">&nbsp;{page || 1} / {total}&nbsp;</span>\n        <Link\n          to={nextUrl}\n          onClick={() => scrollToTop()}\n          className=\"flex-1 inline-block text-gray-600 dark:text-white p-3 hover:text-blue-500 border-transparent border-b-2\"\n        >\n          {page !== total ? 'more' : '' }\n        </Link>\n    </div>\n  );\n}","import { Collection } from './Collection';\n\nexport default Collection;","import React from 'react';\nimport Story from '../Story';\nimport Loading from '../Loading';\nimport Pagination from '../Pagination';\n\nimport { \n  Story as StoryModel,\n  Collection as CollectionModel\n} from '../../services/node-hnapi';\n\nimport { CollectionType } from '../../features/collection/collectionSlice';\n\ninterface Props {\n  type: CollectionType,\n  collection: CollectionModel\n  isFetching: boolean,\n  path?: string,\n  page: number\n}\n\nexport const Collection = (props: Props) => {\n\n  const {\n    type,\n    collection,\n    isFetching,\n    path,\n    page = '1',\n  } = props;\n\n  const pageNumber: string = page.toString() || '1';\n\n  const renderList = (data: StoryModel[], perPage: number) => {\n    return (\n      <div>\n        <ol>\n          {renderStories(data, perPage)}\n        </ol>\n      </div>\n    );\n  }\n\n  const renderStories = (data: StoryModel[], perPage: number) => {\n    return data.map((data, index: number) => (\n      <li key={index}>\n        <Story\n          key={index}\n          index={index}\n          data={data}\n          page={pageNumber}\n          perPage={perPage}\n        />\n      </li>\n    ));\n  }\n\n  const renderContent = (content: StoryModel[]) => {\n    if (isFetching) {\n      return <Loading />;\n    }\n    \n    if (content.length > 0) {\n      return (\n        <div>\n          {renderList(content, content.length)}\n          <div className=\"my-4\">\n            <Pagination \n              page={pageNumber ? pageNumber : '1'} \n              type={type}\n            />\n          </div>\n        </div>\n      );\n    }\n    else if (!isFetching && path) {\n      const url = path.replace(':page?', (Number(pageNumber) - 1).toString());\n      return (\n        <div className=\"p-4 bg-white dark:bg-gray-500\">\n          <p>There's nothing to show here…</p>\n          <a href={url}>\n            Try the previous page?\n          </a>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      {renderContent(collection)}\n    </div>\n  );\n}","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { RootState } from \"../../store\";\nimport {\n  getCollection,\n  CollectionType,\n  getCollectionByCategory,\n} from \"./collectionSlice\";\nimport { scrollToTop, setTitle } from \"../../helpers\";\nimport Collection from \"../../components/Collection\";\n\nexport interface Props {\n  type: CollectionType;\n}\n\nexport const CollectionFeature = (props: Props) => {\n  const { type } = props;\n  const { path, page } = useParams<{ path: string; page: string }>();\n  const { collections } = useSelector((state: RootState) => state);\n  const dispatch = useDispatch();\n\n  const pageNumber: string = page?.toString() || \"1\";\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  useEffect(() => {\n    setTitle(type === \"news\" ? \"Top\" : type);\n    if (type === \"business\") {\n      dispatch(getCollectionByCategory(type, pageNumber));\n    } else {\n      dispatch(getCollection(type, pageNumber));\n    }\n  }, [type, pageNumber, dispatch]);\n\n  if (Number(page) > 10 && path) {\n    return <Redirect to={path.replace(\":page\", \"10\")} />;\n  }\n\n  return (\n    <Collection\n      type={type}\n      collection={collections[type]}\n      isFetching={collections.isFetching}\n      page={Number(page) || 1}\n      path={path}\n    />\n  );\n};\n","import React from 'react';\nimport Comments from '../Comments';\nimport { Link } from 'react-router-dom';\nimport { renderMarkup, getPath } from '../../helpers';\nimport { Comment as CommentModel } from '../../services/node-hnapi';\n\ninterface ICommentProps {\n  data: CommentModel\n}\n\nexport const Comment = (props: ICommentProps): JSX.Element => {\n  const { data: comment } = props;\n  return (\n    <div\n      style={{\n        minWidth: '15rem',\n        paddingLeft: comment.level < 50 ? `${comment.level / 2}rem` : 0\n      }}\n    >\n      <div className=\"mb-4\">\n        <div className=\"text-gray-600 dark:text-gray-300 mb-2 flex flex-wrap\">\n          <Link\n            className=\"underline pb-4 break-all sm:break-normal\"\n            to={`/user/${comment.user}`}\n          >\n            {comment.user}\n          </Link>&nbsp;\n          <Link\n            className=\"hover:underline pb-4\"\n            to={getPath(comment)}\n          >\n            <span className=\"\">{comment.time_ago}</span>\n          </Link>\n        </div>\n        <div\n          className=\"overflow-x-auto\"\n          dangerouslySetInnerHTML={renderMarkup(comment.content)}\n        />\n      </div>\n      {comment.comments.length > 0\n        ? <Comments data={comment.comments} />\n        : ''\n      }\n    </div>\n  );\n}","import React from 'react';\nimport Comment from '../Comment';\nimport { Comment as CommentModel } from '../../services/node-hnapi';\n\ninterface ICommentsProps {\n  data: CommentModel[]\n}\n\nexport const Comments = (props: ICommentsProps): JSX.Element => {\n  const { data: comments } = props;\n  return (\n    <ul className=\"comments__list\">\n      {comments.map((comment, index) => (\n        <li\n          key={index}\n          className=\"comments__listItem\"\n        >\n          <Comment data={comment} />\n        </li>\n      ))}\n    </ul>\n  );\n}","import { Item } from './Item';\n\nexport default Item;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport  Comments from '../Comments';\nimport { discussion } from '../../helpers';\nimport { Item as ItemModel } from '../../services/node-hnapi';\nimport {\n  renderMarkup,\n  getLinkUrl,\n} from '../../helpers';\n\ninterface Props {\n  item: ItemModel\n  isFetching: boolean\n}\n\nexport const Item = (props: Props) => {\n\n  const { item, isFetching } = props;\n  const discussionLabel = discussion(item);\n\n  const renderItem = (data: ItemModel) => {\n    if (data && data.comments) {\n      return (\n        <div className=\"p-4 dark:p-1 dark:px-2 bg-white dark:bg-gray-600\">\n          <h1 className=\"text-2xl font-bold mb-4\">\n            <a\n              className=\"bg-blue-100 hover:bg-blue-150 rounded-sm p-1 -m-1 inline-flex items-center flex-wrap break-all sm:break-normal visited:bg-white dark:text-gray-100 dark:hover:text-gray-700\"\n              href={getLinkUrl(data)}\n            >\n              <span>\n                {data.title}\n              </span>\n              {data.domain &&\n                <Fragment>\n                  &nbsp;\n                  <span className=\"text-base\">({data.domain})</span>\n                </Fragment>\n              }\n            </a>\n          </h1>\n          <div className=\"text-gray-600 dark:text-gray-300\">\n            {data.points && (\n              <span>\n                <span className=\"break-all sm:break-normal\">\n                  {data.points} {data.points === 1 ? 'point ' : 'points '}\n                  <span>by</span> <Link className=\"dark:underline\" to={`/user/${data.user}`}>{data.user}</Link>\n                  {discussionLabel &&\n                    <span className=\"inline-block\">\n                      &nbsp;{discussionLabel}\n                    </span>\n                  }\n                </span>\n              </span>\n            )}\n          </div>\n          <div\n            className=\"mt-3\"\n            dangerouslySetInnerHTML={renderMarkup(data.content)}\n          />\n        </div>\n      );\n    }\n    if (!isFetching) {\n      return (\n        <p>Nothing to show…</p>\n      )\n    }\n  }\n\n  const renderComments = (data: ItemModel) => {\n    return (\n      <div className=\"my-4 py-2 px-4 dark:px-2 bg-white dark:bg-gray-600 overflow-x-auto\">\n          <Comments data={data.comments} />\n      </div>\n    );\n  }\n\n  const renderContents = (data: ItemModel) => {\n    return (\n      <div className={isFetching ? 'opacity-25' : ''}>\n        { renderItem(data) }\n        {\n          data.comments && data.comments.length > 0\n            ? renderComments(data)\n            : ''\n        }\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {renderContents(item)}\n    </div>\n  );\n}","import React from 'react';\n\nimport { renderMarkup } from '../../helpers';\nimport { User as UserModel } from '../../services/node-hnapi';\n\nimport Loading from '../../components/Loading';\n\ninterface Props {\n  user: UserModel,\n  isFetching: boolean\n}\n\nexport const User = (props: Props) => {\n\n  const getRating = (karma: number): { label: string; icon: string } => {\n    const length = karma.toString().length;\n    if (karma > 100) {\n      return { label: 'great rating', icon: '🔥'.repeat(length) };\n    } else if (karma < 0) {\n      return { label: 'bad rating', icon: '💩'.repeat(length - 1) };\n    } else if (karma === 0 || !karma) {\n      return { label: 'new user', icon: '🆕' };\n    }\n    return { label: 'good rating', icon: '👍'.repeat(length) };\n  }\n\n  const renderRating = (karma: number) => {\n    if (karma === undefined) return;\n    const rating = getRating(karma);\n    return (\n      <span\n        role=\"img\"\n        aria-label={`${rating.label}`}\n        title={rating.label}\n      >\n        {rating.icon}\n      </span>\n    );\n  }\n\n  const renderUser = (data: UserModel) => {\n    return (\n      <div className=\"bg-white dark:bg-gray-600 p-1\">\n        <h1 className=\"text-2xl font-bold mb-3 text-gray-600 dark:text-white\">{data.id}</h1>\n        <div className=\"mb-3 text-gray-600 dark:text-white\">\n          <div>\n            <span className=\"font-bold\">Created:</span>&nbsp;\n            {data.created}\n          </div>\n          <div>\n            <span className=\"font-bold\">Karma:</span>&nbsp;\n            {data.karma} {renderRating(data.karma)}\n          </div>\n        </div>\n        <div className=\"text-gray-600 dark:text-white\" dangerouslySetInnerHTML={renderMarkup(data.about)} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {props.isFetching \n        ? <Loading /> \n        : renderUser(props.user)\n      }\n    </div>\n  );\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { scrollToTop } from \"../../helpers\";\n\nconst links: { dest: string; label: string }[] = \n  [{\n    dest: \"/topics\",\n    label: \"topics\",\n  },\n  {\n    dest: \"/news\",\n    label: \"top\",\n  },\n  {\n    dest: \"/newest\",\n    label: \"new\",\n  },\n  {\n    dest: \"/show\",\n    label: \"show\",\n  },\n  {\n    dest: \"/ask\",\n    label: \"ask\",\n  },\n  {\n    dest: \"/jobs\",\n    label: \"jobs\",\n  }\n  ,\n];\n\nconst navLinkClass =\n  \"inline-block text-white p-3 hover:text-blue-500 border-transparent border-b-2\";\nconst navLinkActiveClass = \"border-blue-500 text-blue-500\";\n\nexport const Navigation: React.FC = () => (\n  <nav className=\"sm:sticky top-0 bg-black-600\" onClick={() => scrollToTop()}>\n    <div className=\"max-w-screen-lg mx-auto\">\n      <ul className=\"flex flex-col sm:flex-row items-center flex-wrap\">\n        {links.map((link, index) => (\n          <li key={index}>\n            <NavLink\n              to={link.dest}\n              className={navLinkClass}\n              activeClassName={navLinkActiveClass}\n            >\n              {link.label}\n            </NavLink>\n          </li>\n        ))}\n        <li className=\"sm:ml-auto\">\n          <NavLink\n            to=\"/about\"\n            className={navLinkClass}\n            activeClassName={navLinkActiveClass}\n          >\n            about\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport Story from '../Story';\nimport Loading from '../Loading';\n\n\nimport { \n  Story as StoryModel,\n  Collection as CollectionModel\n} from '../../services/node-hnapi';\n\nimport { CollectionType } from '../../features/collection/collectionSlice';\n\ninterface Props {\n  type: CollectionType,\n  collection: CollectionModel\n  isFetching: boolean,\n  path?: string,\n  page: number\n}\n\nexport const Collection = (props: Props) => {\n\n  const {\n\n    collection,\n    isFetching,\n    path,\n    page = '1',\n  } = props;\n\n  const pageNumber: string = page.toString() || '1';\n\n  const renderList = (data: StoryModel[], perPage: number) => {\n    return (\n      <div>\n        <ol>\n          {renderStories(data, perPage)}\n        </ol>\n      </div>\n    );\n  }\n\n  const renderStories = (data: StoryModel[], perPage: number) => {\n    return data.map((data, index: number) => (\n      <li key={index}>\n        <Story\n          key={index}\n          index={index}\n          data={data}\n          page={pageNumber}\n          perPage={perPage}\n        />\n      </li>\n    ));\n  }\n\n  const renderContent = (content: StoryModel[]) => {\n    if (isFetching) {\n      return <Loading />;\n    }\n    \n    if (content.length > 0) {\n      return (\n        <div>\n          {renderList(content, 5)}\n          {/* <div className=\"my-4\">\n            <Pagination \n              page={pageNumber ? pageNumber : '1'} \n              type={type}\n            /> \n          </div>\n            */}\n        </div>\n      );\n    }\n    else if (!isFetching && path) {\n      const url = path.replace(':page?', (Number(pageNumber) - 1).toString());\n      return (\n        <div className=\"p-4 bg-white dark:bg-gray-500\">\n          <p>There's nothing to show here…</p>\n          <a href={url}>\n            Try the previous page?\n          </a>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      {renderContent(collection)}\n    </div>\n  );\n}\n","import { Topics } from './Topics';\n\nexport default Topics;","import React, { useEffect, useState } from 'react';\nimport { setTitle } from '../../helpers';\n\nimport exampleCollection from './exampleCollection.json';\nimport { Collection } from './Collection';\nimport { \n  api,\n  TopicModel\n} from '../../services/node-hnapi';\n\n\nexport const Topics: React.FC = () => {\n  const [collection, setIsCollection] = useState<{[key:string]:any}>(exampleCollection)\n\n  useEffect(() => {\n    setTitle('topics');\n    \n  })\n\n  useEffect(() => {\n    const fetchTopics = async () => {\n    for await (const topic of Object.values(TopicModel)) {\n      const topicResponse = await api.getCollectionByCategory(topic,\"1\");\n      setIsCollection((prevState)=>({...prevState, [topic]: topicResponse.slice(0,5)}))\n    }\n  }\n  api.updateIndex()\n  fetchTopics()\n},[]\n  \n  )\n\n\n  return (\n    <div className=\"About\">\n      {/* <Markdown source={markdown} /> */}\n         {\n\nObject.entries(collection).map(([topic,topicCollection]) =>\n         { \n         \n         return <><h1>{topic}</h1>{topicCollection?.length ?<Collection  type={\"news\"}\n          collection={topicCollection.slice(0,5)}\n          isFetching={false}\n          page={  1}\n          path={\"topics\"}/>:\"Loading...\"}</>}\n   )}\n    </div>\n  )\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { CollectionFeature } from \"./features/collection/Collection\";\nimport { ItemFeature } from \"./features/item/Item\";\nimport { UserFeature } from \"./features/user/User\";\nimport { DefaultFeature } from \"./features/default/Default\";\n\nimport Navigation from \"./components/Navigation\";\nimport About from \"./components/About\";\nimport NoMatch from \"./components/NoMatch\";\nimport Topics  from \"./components/Topics\";\n\nconst root: JSX.Element = (\n  <Provider store={store}>\n    <Router >\n      <div>\n        <Navigation />\n        <main>\n          <div className=\"max-w-screen-lg my-4 mx-auto\">\n            <Switch>\n              <Route exact path={`/`} component={DefaultFeature} />\n              <Route path={`/item/:id`} component={ItemFeature} />\n              <Route path={`/user/:id`} component={UserFeature} />\n              <Route\n                path={`/news/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"news\" />}\n              />\n              <Route\n                path={`/newest/:page?`}\n                render={(props) => (\n                  <CollectionFeature {...props} type=\"newest\" />\n                )}\n              />\n              <Route\n                path={`/show/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"show\" />}\n              />\n              <Route\n                path={`/ask/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"ask\" />}\n              />\n              <Route\n                path={`/jobs/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"jobs\" />}\n              />\n              <Route\n                path={`/business/:page?`}\n                render={(props) => (\n                  <CollectionFeature {...props} type=\"business\" />\n                )}\n              />\n              <Route exact path={`/about`} component={About} />\n              <Route  path={`/topics`} component={Topics} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(root, document.getElementById(\"root\"));\nserviceWorker.register();\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const DefaultFeature: React.FC = () => (\n  <Redirect to=\"/topics\" />\n)","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getItem } from '../../features/item/itemSlice';\nimport Item from '../../components/Item';\n\nimport {\n    scrollToTop,\n    setTitle\n} from '../../helpers';\n\nexport const ItemFeature = () => {\n    const { id } = useParams<{id:string}>();\n    const dispatch = useDispatch();\n    const { item, isFetching } = useSelector((state: RootState) => state.items);\n\n    useEffect(() => {\n        scrollToTop();\n      }, [])\n\n    useEffect(() => {\n    if (id) {\n        dispatch(getItem(id));\n    }\n    }, [id, dispatch])\n\n    useEffect(() => {\n        if (item && item.title) {\n          setTitle(item.title)\n        }\n      }, [item])\n\n    return (\n        <Item\n            item={item}\n            isFetching={isFetching}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getUser } from '../../features/user/userSlice';\nimport User from '../../components/User';\n\nexport const UserFeature = () => {\n    const dispatch = useDispatch();\n    const { id } = useParams<{id:string}>();\n    const { user: data } = useSelector((state: RootState) => state);\n\n    useEffect(() => {\n        if (id) {\n            dispatch(getUser(id))\n        }\n    }, [id, dispatch])\n\n    return (\n        <User\n            user={data.user}\n            isFetching={data.isFetching}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { setTitle } from '../../helpers';\nimport raw from 'raw.macro';\nimport Markdown from 'react-remarkable';\nconst markdown = raw(\"../../../README.md\");\n\nexport const About: React.FC = () => {\n  useEffect(() => {\n    setTitle('about')\n  })\n\n  return (\n    <div className=\"About\">\n      <Markdown source={markdown} />\n      <p className=\"dark:text-white\">\n        View the source code on <a className=\"dark:hover:text-gray-700\" href=\"https://github.com/ptibbetts/reactHN\">GitHub</a>\n      </p>\n      <p className=\"dark:text-white\">\n        <a\n          className=\"<3\"\n          href=\"https://paultibbetts.uk\"\n        >\n          <span role=\"img\" aria-label=\"love\">💙</span>\n        </a>\n      </p>\n    </div>\n  )\n};","import React from 'react';\n\ninterface INoMatchProps {\n  location: {\n    pathname: string\n  }\n}\n\nexport const NoMatch = ({ location }: INoMatchProps) => (\n  <h1 className=\"font-bold text-gray-700 dark:text-white text-2xl\">Nothing was found for \"{location.pathname}\".</h1>\n);"],"sourceRoot":""}