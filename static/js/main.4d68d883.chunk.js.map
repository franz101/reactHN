{"version":3,"sources":["serviceWorker.ts","services/cacheHelper.ts","services/node-hnapi.ts","features/collection/collectionSlice.ts","features/item/itemSlice.ts","features/user/userSlice.ts","reducers/index.ts","store.ts","helpers.tsx","components/Story/Story.tsx","components/Loading/Loading.tsx","components/Pagination/Pagination.tsx","components/Collection/index.ts","components/Collection/Collection.tsx","features/collection/Collection.tsx","components/Comment/Comment.tsx","components/Comments/Comments.tsx","components/Item/index.ts","components/Item/Item.tsx","components/User/User.tsx","components/Navigation/Navigation.tsx","index.tsx","features/default/Default.tsx","features/item/Item.tsx","features/user/User.tsx","components/About/About.tsx","components/NoMatch/NoMatch.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","categoriesLookup","0","1","2","3","4","5","6","calculateIndex","id","Math","floor","getCategoryPrediction","index","textInput","cellsFlattend","split","rows","result","length","push","splice","reverse","row","parseFloat","slice","getCategoryForIdCached","a","Promise","resolve","reject","fetch","method","mode","credentials","res","text","data","err","csvData","predictions","prediction","predictionMax","max","predictionCat","indexOf","getCategoryIdForIdCached","API_URL","api","getCollection","type","page","json","getItem","getUser","getCollectionByCategory","currentPage","parseInt","fetchPage","businessItems","items","item","getCategory","headers","Accept","body","JSON","stringify","category","join","collectionsSlice","createSlice","name","initialState","news","show","ask","newest","jobs","business","isFetching","reducers","requestList","receiveList","action","payload","actions","itemSlice","requestItem","receiveItem","userSlice","user","requestUser","receiveUser","rootReducer","combineReducers","collections","collectionSlice","store","configureStore","reducer","renderMarkup","markup","__html","dompurify","sanitize","scrollToTop","scrollTo","discussion","comments_count","getPath","getLinkUrl","string","URL","e","isValidUrl","url","setTitle","title","document","ucFirst","charAt","toUpperCase","Story","props","perPage","position","Number","discussionLabel","useState","setCategory","useEffect","getCat","cat","className","style","flexBasis","flexShrink","href","domain","StoryLink","points","to","time_ago","Loading","top","left","fontSize","role","aria-label","Pagination","prevUrl","nextUrl","lineHeight","onClick","Collection","collection","path","pageNumber","toString","renderStories","map","key","content","replace","renderContent","CollectionFeature","useParams","useSelector","dispatch","useDispatch","Comment","comment","minWidth","paddingLeft","level","dangerouslySetInnerHTML","comments","Comments","Item","renderItem","renderComments","User","created","karma","undefined","rating","label","icon","repeat","getRating","renderRating","about","links","dest","navLinkClass","Navigation","link","activeClassName","root","exact","component","render","source","pathname","ReactDOM","getElementById","process","origin","addEventListener","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d68d883.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","const fileName = \"30256320.csv\";\nconst exampleText =\n  \"53.0,1.36,0.54,79.42,0.53,0.61,1.67,15.87,48.0,0.41,1.65,86.36,1.07,0.3,0.78,9.43,35.0,0.81,0.89,32.08,1.98,0.36,1.14,62.74,34.0,62.52,0.48,0.63,23.72,1.45,6.01,5.19,26.0,0.41,0.34,1.69,5.48,0.2,0.46,91.42\";\n\nconst categoriesLookup = {\n  0: \"CULTURE & ARTS\",\n  1: \"EDUCATION\",\n  2: \"BUSINESS\",\n  3: \"HEALTH & LIVING\",\n  4: \"SPORTS\",\n  5: \"NEWS & POLITICS\",\n  6: \"TECH & SCIENCE\",\n};\n\n/* the data is chunked by 64\n so when the id is 562356 you take the closest multiple of 64. which is 562304. That is the name of the file 562304.csv */\nconst calculateIndex = (id) => {\n  return Math.floor(id / 64) * 64;\n};\n\n/*\ngiven the id and the content of the file return the result as a json */\nconst getCategoryPrediction = (index: number, textInput: string) => {\n  //7 categories\n  const size = 7 + 1;\n  const cellsFlattend = textInput.split(\",\");\n  const rows: string[][] = [];\n  const result = {};\n\n  //We want to reshape the cells of text\n  //From shape (64)\n  //To shape   (8,8)\n  while (cellsFlattend.length) {\n    rows.push(cellsFlattend.splice(0, size));\n  }\n  //sort ascending\n  rows.reverse();\n\n  //parse the results\n  for (const row of rows) {\n    // id: probabilties\n    result[index + parseFloat(row[0])] = row.slice(1);\n  }\n  return result;\n};\n\nconst listProbalitiesForPrediction = (prediction) => {\n  const predictionProbalities = {};\n  for (let i = 0; i < prediction.length; i++) {\n    predictionProbalities[categoriesLookup[i]] = prediction[i];\n  }\n  return predictionProbalities;\n};\n\nexport const getCategoryForIdCached = async (id: number) => {\n  const index = calculateIndex(id);\n  const csvData = await new Promise<any>((resolve, reject) => {\n    // post request using fetch\n    fetch(\n      `https://franz101.github.io/hn_topic_data/predictions/export/${index}.csv`,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"omit\",\n      }\n    )\n      .then((res) => res.text())\n      .then((data: any) => {\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n\n  const predictions = getCategoryPrediction(index, csvData);\n  const prediction = predictions[id];\n  const predictionMax = Math.max(...prediction);\n  const predictionCat = prediction.indexOf(predictionMax + \"\");\n  return (\n    categoriesLookup[predictionCat] + \" (\" + predictionMax + \"%)\"\n    //\\n\" +\n    //JSON.stringify(listProbalitiesForPrediction(prediction))\n  );\n};\n\nexport const getCategoryIdForIdCached = async (id: number) => {\n  const index = calculateIndex(id);\n  const csvData = await new Promise<any>((resolve, reject) => {\n    // post request using fetch\n    fetch(\n      `https://franz101.github.io/hn_topic_data/predictions/export/${index}.csv`,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"omit\",\n      }\n    )\n      .then((res) => res.text())\n      .then((data: any) => {\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n\n  const predictions = getCategoryPrediction(index, csvData);\n  const prediction = predictions[id];\n  const predictionMax = Math.max(...prediction);\n  const predictionCat = prediction.indexOf(predictionMax + \"\");\n  return predictionCat;\n};\n","import { CollectionType } from \"../features/collection/collectionSlice\";\nimport {\n  getCategoryForIdCached,\n  getCategoryIdForIdCached,\n} from \"./cacheHelper\";\n\nconst API_URL = \"https://node-hnapi.herokuapp.com/\";\n\nexport interface Urlable {\n  id: number;\n  user: string;\n  time: number;\n  time_ago: string;\n}\n\nexport interface Story extends Urlable {\n  id: number;\n  title: string;\n  domain: string;\n  points: number;\n  user: string;\n  time: number;\n  time_ago: string;\n  type: string;\n  comments_count: number;\n  url: string;\n}\n\nexport type Collection = Story[];\n\nexport interface Item extends Story {\n  comments: Comment[];\n  content: string;\n}\n\nexport interface Comment extends Urlable {\n  level: number;\n  user: string;\n  time_ago: string;\n  content: string;\n  comments: Comment[];\n}\n\nexport interface User {\n  id: string;\n  created_time: number;\n  created: string;\n  karma: number;\n  avg: null;\n  about: string;\n}\n\nexport const api = {\n  getCollection: (type: CollectionType, page: string) => {\n    return new Promise<Collection>((resolve, reject) => {\n      fetch(`${API_URL}${type}?page=${page}`)\n        .then((res) => res.json())\n        .then((data: Item[]) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getItem: (id: string) => {\n    return new Promise<Item>((resolve, reject) => {\n      fetch(`${API_URL}item/${id}`)\n        .then((res) => res.json())\n        .then((data: Item) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getUser: (id: string) => {\n    return new Promise<User>((resolve, reject) => {\n      fetch(`${API_URL}user/${id}`)\n        .then((res) => res.json())\n        .then((data: User) => {\n          resolve(data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  getCollectionByCategory: async (type: CollectionType, page: string) => {\n    if (type !== \"business\") {\n      return [] as Item[];\n    }\n\n    let currentPage = parseInt(page);\n\n    const fetchPage = (page: number) =>\n      new Promise<Collection>((resolve, reject) => {\n        fetch(`${API_URL}news?page=${page}`)\n          .then((res) => res.json())\n          .then((data: Item[]) => {\n            resolve(data);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n\n    const businessItems: Collection = [];\n    while (businessItems.length < 10) {\n      const items = await fetchPage(currentPage);\n      for await (const item of items) {\n        try {\n          const cat = await getCategoryIdForIdCached(item.id);\n          if (cat === 2) {\n            businessItems.push(item);\n          } else {\n          }\n        } catch (error) {\n          console.log(item.id, \"not found\");\n        }\n      }\n      currentPage++;\n    }\n    return businessItems;\n  },\n\n  getCategoryForIdCached,\n\n  getCategory: (text: string) => {\n    return new Promise<any>((resolve, reject) => {\n      // post request using fetch\n      fetch(`http://127.0.0.1:8000/category`, {\n        method: \"POST\",\n        mode: \"cors\",\n        credentials: \"omit\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          text: text,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data: any) => {\n          console.log(data);\n          resolve(data.category.slice(0, 2).join(\", \"));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../../store\";\nimport { Collection as CollectionModel, api } from \"../../services/node-hnapi\";\n\nexport interface Collections {\n  news: CollectionModel;\n  newest: CollectionModel;\n  show: CollectionModel;\n  ask: CollectionModel;\n  jobs: CollectionModel;\n  business: CollectionModel;\n}\n\nexport type CollectionType = keyof Collections;\n\nexport interface CollectionsState extends Collections {\n  isFetching: boolean;\n}\n\nconst initialState: CollectionsState = {\n  news: [],\n  show: [],\n  ask: [],\n  newest: [],\n  jobs: [],\n  business: [],\n  isFetching: false,\n};\n\nconst collectionsSlice = createSlice({\n  name: \"collections\",\n  initialState,\n  reducers: {\n    requestList: (state) => {\n      state.isFetching = true;\n    },\n    receiveList: (\n      state,\n      action: PayloadAction<{ type: CollectionType; data: CollectionModel }>\n    ) => {\n      const { type, data } = action.payload;\n      state.isFetching = false;\n      state[type] = data;\n    },\n  },\n});\n\nexport const { requestList, receiveList } = collectionsSlice.actions;\n\nexport default collectionsSlice.reducer;\n\nexport const getCollectionByCategory = (\n  type: keyof Collections,\n  page: string\n): AppThunk => async (dispatch) => {\n  dispatch(requestList());\n  api\n    .getCollectionByCategory(type, page)\n    .then((data) => {\n      dispatch(receiveList({ type, data }));\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const getCollection = (\n  type: keyof Collections,\n  page: string\n): AppThunk => async (dispatch) => {\n  dispatch(requestList());\n  api\n    .getCollection(type, page)\n    .then((data) => {\n      dispatch(receiveList({ type, data }));\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { Item as ItemModel, api } from '../../services/node-hnapi';\n\nexport interface Items {\n    item: ItemModel\n}\n\nexport interface ItemState extends Items {\n    isFetching: boolean,\n}\n\nconst initialState: ItemState = {\n    isFetching: false,\n    item: {} as ItemModel\n}\n\nconst itemSlice = createSlice({\n    name: 'items',\n    initialState,\n    reducers: {\n        requestItem: state => {\n            state.isFetching = true;\n        },\n        receiveItem: (state, action: PayloadAction<{ id: string, data: ItemModel}>) => {\n            const { id, data } = action.payload;\n            state.isFetching = false;\n            state.item = data;\n        },\n    },\n});\n\nexport const { requestItem, receiveItem } = itemSlice.actions;\n\nexport default itemSlice.reducer;\n\nexport const getItem = (id: string): AppThunk => async dispatch => {\n    dispatch(requestItem());\n    api.getItem(id)\n        .then((data) => {\n            dispatch(receiveItem({ id, data }))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from '../../store';\nimport { User as UserModel, api } from '../../services/node-hnapi';\n\nexport interface User {\n    user: UserModel\n}\n\nexport interface UserState extends User {\n    isFetching: boolean,\n}\n\nconst initialState: UserState = {\n    isFetching: false,\n    user: {} as UserModel\n}\n\nconst userSlice = createSlice({\n    name: 'item',\n    initialState,\n    reducers: {\n        requestUser: state => {\n            state.isFetching = true;\n        },\n        receiveUser: (state, action: PayloadAction<UserModel>) => {\n            state.isFetching = false;\n            state.user = action.payload;\n        },\n    },\n});\n\nexport const { requestUser, receiveUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n\nexport const getUser = (id: string): AppThunk => async dispatch => {\n    dispatch(requestUser());\n    api.getUser(id)\n        .then((data) => {\n            dispatch(receiveUser(data))\n        })\n        .catch(err => {\n            console.error(err)\n        });\n    \n}","import { combineReducers } from 'redux';\nimport collectionSlice from '../features/collection/collectionSlice';\nimport itemSlice from '../features/item/itemSlice';\nimport userSlice from '../features/user/userSlice';\n\nconst rootReducer = combineReducers({\n  collections: collectionSlice,\n  items: itemSlice,\n  user: userSlice\n});\n\nexport default rootReducer;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport reducer from './reducers';\n\nexport const store = configureStore({reducer});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;","import dompurify from \"dompurify\";\nimport { Story, Urlable } from \"./services/node-hnapi\";\n\nexport const renderMarkup = (markup: string): { __html: string } => {\n  return { __html: dompurify.sanitize(markup) };\n};\n\nexport const scrollToTop = (): void => {\n  window.scrollTo(0, 0);\n};\n\nexport const discussion = (data: Story): string => {\n  if (data.type === \"job\") return \"\";\n  if (data.comments_count > 0) {\n    return `${data.comments_count} ${\n      data.comments_count === 1 ? \"comment \" : \"comments \"\n    }`;\n  }\n  return \"discuss\";\n};\n\nexport const getPath = (data: Urlable): string => `/item/${data.id}`;\n\nconst isValidUrl = (string: string): boolean => {\n  try {\n    new URL(string);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const getLinkUrl = (data: Story): string =>\n  isValidUrl(data.url) ? data.url : getPath(data);\n\nexport const setTitle = (title: string): void => {\n  document.title = `${title ? ucFirst(title) + \" - \" : \"\"} React HN`;\n};\n\nexport const ucFirst = (string: string): string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getLinkUrl, getPath, discussion } from \"../../helpers\";\nimport { api, Story as StoryModel } from \"../../services/node-hnapi\";\n\nconst StoryLink = (data: StoryModel) => (\n  <a\n    href={getLinkUrl(data)}\n    className=\"bg-blue-150 hover:bg-blue-500 dark:bg-blue-100 rounded-sm p-1 break-words visited:bg-white hover:text-gray-700 dark:text-gray-100 dark-hover:text-gray-700\"\n  >\n    {data.title}\n    &nbsp;\n    {data.domain && <span className=\"break-words\">({data.domain})</span>}\n  </a>\n);\n\ninterface Props {\n  perPage: number;\n  index: number;\n  page: string;\n  data: StoryModel;\n}\n\nexport const Story = (props: Props): JSX.Element => {\n  const { data, index, page } = props;\n  const perPage = props.perPage || 30;\n  const position = index + 1 + (Number(page) - 1) * perPage;\n  const discussionLabel = discussion(data);\n  const [category, setCategory] = useState(\"loading...\");\n\n  useEffect(() => {\n    const getCat = async () => {\n      try {\n        const cat = await api.getCategoryForIdCached(data.id);\n        //      const cat = await api.getCategory(data.title);\n\n        setCategory(cat);\n      } catch (error) {\n        setCategory(\"failed\");\n      }\n    };\n    try {\n      getCat();\n    } catch (error) {\n      setCategory(\"error\");\n    }\n  }, [data.id]);\n\n  return (\n    <div className=\"flex py-4 border-solid border-gray-100 dark:border-b-0 border-b\">\n      <div\n        className=\"flex content-center items-center justify-center text-gray-600 dark:text-gray-100\"\n        style={{ flexBasis: \"3rem\", flexShrink: 0 }}\n      >\n        {position}\n      </div>\n      <div className=\"w-full pl-1\">\n        <div className=\"mb-1\">{StoryLink(data)}</div>\n        <div className=\"pl-1 text-sm text-gray-700 dark:text-gray-300\">\n          {data.points && (\n            <span>\n              {data.points} {data.points === 1 ? \"point \" : \"points \"}\n              by&nbsp;\n              <Link to={`/user/${data.user}`} className=\"hover:underline\">\n                {data.user}\n              </Link>\n              &nbsp;\n            </span>\n          )}\n          <span className=\"md:inline-block\">\n            <Link to={getPath(data)} className=\"hover:underline\">\n              {data.time_ago}\n            </Link>\n          </span>\n          <Fragment>\n            <div className=\"hidden md:inline\">&nbsp;|&nbsp;</div>\n            {category}\n          </Fragment>\n          {discussionLabel && (\n            <Fragment>\n              <div className=\"hidden md:inline\">&nbsp;|&nbsp;</div>\n              <div className=\"md:inline-block\">\n                <Link to={getPath(data)} className=\"hover:underline\">\n                  {discussionLabel}\n                </Link>\n              </div>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport CSS from 'csstype';\n\nexport const Loading = (): JSX.Element => {\n    const styles: CSS.Properties = {\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      fontSize: \"2rem\"\n    };\n    return (\n      <div style={styles}>\n        <span role=\"img\" aria-label=\"loading…\">🙈</span>\n      </div>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers';\n\ninterface IPaginationProps {\n  type: string,\n  page: string\n}\n\nexport const Pagination = (props: IPaginationProps): JSX.Element => {\n  const page = Number(props.page);\n  const prevUrl = `/${props.type}/${(page - 1) > 1 ? page - 1 : 1}`;\n  const nextUrl = `/${props.type}/${page + 1}`;\n  const total = 10; // max limit of hnapi\n\n  return (\n    <div\n      className=\"bg-white dark:bg-gray-600 p-3 flex text-center dark:text-white\"\n      style={{\n        lineHeight: \"1\",\n      }}\n    >\n      <Link\n        to={prevUrl}\n        onClick={() => scrollToTop()}\n        className=\"flex-1 inline-block text-gray-600 dark:text-white p-3 hover:text-blue-500 border-transparent border-b-2\"\n      >\n        {page > 1 ? 'prev' : '' }\n      </Link>\n      <span className=\"p-3 flex-1\">&nbsp;{page || 1} / {total}&nbsp;</span>\n        <Link\n          to={nextUrl}\n          onClick={() => scrollToTop()}\n          className=\"flex-1 inline-block text-gray-600 dark:text-white p-3 hover:text-blue-500 border-transparent border-b-2\"\n        >\n          {page !== total ? 'more' : '' }\n        </Link>\n    </div>\n  );\n}","import { Collection } from './Collection';\n\nexport default Collection;","import React from 'react';\nimport Story from '../Story';\nimport Loading from '../Loading';\nimport Pagination from '../Pagination';\n\nimport { \n  Story as StoryModel,\n  Collection as CollectionModel\n} from '../../services/node-hnapi';\n\nimport { CollectionType } from '../../features/collection/collectionSlice';\n\ninterface Props {\n  type: CollectionType,\n  collection: CollectionModel\n  isFetching: boolean,\n  path?: string,\n  page: number\n}\n\nexport const Collection = (props: Props) => {\n\n  const {\n    type,\n    collection,\n    isFetching,\n    path,\n    page = '1',\n  } = props;\n\n  const pageNumber: string = page.toString() || '1';\n\n  const renderList = (data: StoryModel[], perPage: number) => {\n    return (\n      <div>\n        <ol>\n          {renderStories(data, perPage)}\n        </ol>\n      </div>\n    );\n  }\n\n  const renderStories = (data: StoryModel[], perPage: number) => {\n    return data.map((data, index: number) => (\n      <li key={index}>\n        <Story\n          key={index}\n          index={index}\n          data={data}\n          page={pageNumber}\n          perPage={perPage}\n        />\n      </li>\n    ));\n  }\n\n  const renderContent = (content: StoryModel[]) => {\n\n    if (isFetching) {\n      return <Loading />;\n    }\n    \n    if (content.length > 0) {\n      return (\n        <div>\n          {renderList(content, content.length)}\n          <div className=\"my-4\">\n            <Pagination \n              page={pageNumber ? pageNumber : '1'} \n              type={type}\n            />\n          </div>\n        </div>\n      );\n    }\n    else if (!isFetching && path) {\n      const url = path.replace(':page?', (Number(pageNumber) - 1).toString());\n      return (\n        <div className=\"p-4 bg-white dark:bg-gray-500\">\n          <p>There's nothing to show here…</p>\n          <a href={url}>\n            Try the previous page?\n          </a>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      {renderContent(collection)}\n    </div>\n  );\n}","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { RootState } from \"../../store\";\nimport {\n  getCollection,\n  CollectionType,\n  getCollectionByCategory,\n} from \"./collectionSlice\";\nimport { scrollToTop, setTitle } from \"../../helpers\";\nimport Collection from \"../../components/Collection\";\n\nexport interface Props {\n  type: CollectionType;\n}\n\nexport const CollectionFeature = (props: Props) => {\n  const { type } = props;\n  const { path, page } = useParams<{ path: string; page: string }>();\n  const { collections } = useSelector((state: RootState) => state);\n  const dispatch = useDispatch();\n\n  const pageNumber: string = page?.toString() || \"1\";\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  useEffect(() => {\n    setTitle(type === \"news\" ? \"Top\" : type);\n    if (type === \"business\") {\n      dispatch(getCollectionByCategory(type, pageNumber));\n    } else {\n      dispatch(getCollection(type, pageNumber));\n    }\n  }, [type, pageNumber, dispatch]);\n\n  if (Number(page) > 10 && path) {\n    return <Redirect to={path.replace(\":page\", \"10\")} />;\n  }\n\n  return (\n    <Collection\n      type={type}\n      collection={collections[type]}\n      isFetching={collections.isFetching}\n      page={Number(page) || 1}\n      path={path}\n    />\n  );\n};\n","import React from 'react';\nimport Comments from '../Comments';\nimport { Link } from 'react-router-dom';\nimport { renderMarkup, getPath } from '../../helpers';\nimport { Comment as CommentModel } from '../../services/node-hnapi';\n\ninterface ICommentProps {\n  data: CommentModel\n}\n\nexport const Comment = (props: ICommentProps): JSX.Element => {\n  const { data: comment } = props;\n  return (\n    <div\n      style={{\n        minWidth: '15rem',\n        paddingLeft: comment.level < 50 ? `${comment.level / 2}rem` : 0\n      }}\n    >\n      <div className=\"mb-4\">\n        <div className=\"text-gray-600 dark:text-gray-300 mb-2 flex flex-wrap\">\n          <Link\n            className=\"underline pb-4 break-all sm:break-normal\"\n            to={`/user/${comment.user}`}\n          >\n            {comment.user}\n          </Link>&nbsp;\n          <Link\n            className=\"hover:underline pb-4\"\n            to={getPath(comment)}\n          >\n            <span className=\"\">{comment.time_ago}</span>\n          </Link>\n        </div>\n        <div\n          className=\"overflow-x-auto\"\n          dangerouslySetInnerHTML={renderMarkup(comment.content)}\n        />\n      </div>\n      {comment.comments.length > 0\n        ? <Comments data={comment.comments} />\n        : ''\n      }\n    </div>\n  );\n}","import React from 'react';\nimport Comment from '../Comment';\nimport { Comment as CommentModel } from '../../services/node-hnapi';\n\ninterface ICommentsProps {\n  data: CommentModel[]\n}\n\nexport const Comments = (props: ICommentsProps): JSX.Element => {\n  const { data: comments } = props;\n  return (\n    <ul className=\"comments__list\">\n      {comments.map((comment, index) => (\n        <li\n          key={index}\n          className=\"comments__listItem\"\n        >\n          <Comment data={comment} />\n        </li>\n      ))}\n    </ul>\n  );\n}","import { Item } from './Item';\n\nexport default Item;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport  Comments from '../Comments';\nimport { discussion } from '../../helpers';\nimport { Item as ItemModel } from '../../services/node-hnapi';\nimport {\n  renderMarkup,\n  getLinkUrl,\n} from '../../helpers';\n\ninterface Props {\n  item: ItemModel\n  isFetching: boolean\n}\n\nexport const Item = (props: Props) => {\n\n  const { item, isFetching } = props;\n  const discussionLabel = discussion(item);\n\n  const renderItem = (data: ItemModel) => {\n    if (data && data.comments) {\n      return (\n        <div className=\"p-4 dark:p-1 dark:px-2 bg-white dark:bg-gray-600\">\n          <h1 className=\"text-2xl font-bold mb-4\">\n            <a\n              className=\"bg-blue-100 hover:bg-blue-150 rounded-sm p-1 -m-1 inline-flex items-center flex-wrap break-all sm:break-normal visited:bg-white dark:text-gray-100 dark:hover:text-gray-700\"\n              href={getLinkUrl(data)}\n            >\n              <span>\n                {data.title}\n              </span>\n              {data.domain &&\n                <Fragment>\n                  &nbsp;\n                  <span className=\"text-base\">({data.domain})</span>\n                </Fragment>\n              }\n            </a>\n          </h1>\n          <div className=\"text-gray-600 dark:text-gray-300\">\n            {data.points && (\n              <span>\n                <span className=\"break-all sm:break-normal\">\n                  {data.points} {data.points === 1 ? 'point ' : 'points '}\n                  <span>by</span> <Link className=\"dark:underline\" to={`/user/${data.user}`}>{data.user}</Link>\n                  {discussionLabel &&\n                    <span className=\"inline-block\">\n                      &nbsp;{discussionLabel}\n                    </span>\n                  }\n                </span>\n              </span>\n            )}\n          </div>\n          <div\n            className=\"mt-3\"\n            dangerouslySetInnerHTML={renderMarkup(data.content)}\n          />\n        </div>\n      );\n    }\n    if (!isFetching) {\n      return (\n        <p>Nothing to show…</p>\n      )\n    }\n  }\n\n  const renderComments = (data: ItemModel) => {\n    return (\n      <div className=\"my-4 py-2 px-4 dark:px-2 bg-white dark:bg-gray-600 overflow-x-auto\">\n          <Comments data={data.comments} />\n      </div>\n    );\n  }\n\n  const renderContents = (data: ItemModel) => {\n    return (\n      <div className={isFetching ? 'opacity-25' : ''}>\n        { renderItem(data) }\n        {\n          data.comments && data.comments.length > 0\n            ? renderComments(data)\n            : ''\n        }\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {renderContents(item)}\n    </div>\n  );\n}","import React from 'react';\n\nimport { renderMarkup } from '../../helpers';\nimport { User as UserModel } from '../../services/node-hnapi';\n\nimport Loading from '../../components/Loading';\n\ninterface Props {\n  user: UserModel,\n  isFetching: boolean\n}\n\nexport const User = (props: Props) => {\n\n  const getRating = (karma: number): { label: string; icon: string } => {\n    const length = karma.toString().length;\n    if (karma > 100) {\n      return { label: 'great rating', icon: '🔥'.repeat(length) };\n    } else if (karma < 0) {\n      return { label: 'bad rating', icon: '💩'.repeat(length - 1) };\n    } else if (karma === 0 || !karma) {\n      return { label: 'new user', icon: '🆕' };\n    }\n    return { label: 'good rating', icon: '👍'.repeat(length) };\n  }\n\n  const renderRating = (karma: number) => {\n    if (karma === undefined) return;\n    const rating = getRating(karma);\n    return (\n      <span\n        role=\"img\"\n        aria-label={`${rating.label}`}\n        title={rating.label}\n      >\n        {rating.icon}\n      </span>\n    );\n  }\n\n  const renderUser = (data: UserModel) => {\n    return (\n      <div className=\"bg-white dark:bg-gray-600 p-1\">\n        <h1 className=\"text-2xl font-bold mb-3 text-gray-600 dark:text-white\">{data.id}</h1>\n        <div className=\"mb-3 text-gray-600 dark:text-white\">\n          <div>\n            <span className=\"font-bold\">Created:</span>&nbsp;\n            {data.created}\n          </div>\n          <div>\n            <span className=\"font-bold\">Karma:</span>&nbsp;\n            {data.karma} {renderRating(data.karma)}\n          </div>\n        </div>\n        <div className=\"text-gray-600 dark:text-white\" dangerouslySetInnerHTML={renderMarkup(data.about)} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {props.isFetching \n        ? <Loading /> \n        : renderUser(props.user)\n      }\n    </div>\n  );\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { scrollToTop } from \"../../helpers\";\n\nconst links: { dest: string; label: string }[] = [\n  {\n    dest: \"/news\",\n    label: \"top\",\n  },\n  {\n    dest: \"/newest\",\n    label: \"new\",\n  },\n  {\n    dest: \"/show\",\n    label: \"show\",\n  },\n  {\n    dest: \"/ask\",\n    label: \"ask\",\n  },\n  {\n    dest: \"/jobs\",\n    label: \"jobs\",\n  },\n  {\n    dest: \"/business\",\n    label: \"business\",\n  },\n];\n\nconst navLinkClass =\n  \"inline-block text-white p-3 hover:text-blue-500 border-transparent border-b-2\";\nconst navLinkActiveClass = \"border-blue-500 text-blue-500\";\n\nexport const Navigation: React.FC = () => (\n  <nav className=\"sm:sticky top-0 bg-black-600\" onClick={() => scrollToTop()}>\n    <div className=\"max-w-screen-lg mx-auto\">\n      <ul className=\"flex flex-col sm:flex-row items-center flex-wrap\">\n        {links.map((link, index) => (\n          <li key={index}>\n            <NavLink\n              to={link.dest}\n              className={navLinkClass}\n              activeClassName={navLinkActiveClass}\n            >\n              {link.label}\n            </NavLink>\n          </li>\n        ))}\n        <li className=\"sm:ml-auto\">\n          <NavLink\n            to=\"/about\"\n            className={navLinkClass}\n            activeClassName={navLinkActiveClass}\n          >\n            about\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { CollectionFeature } from \"./features/collection/Collection\";\nimport { ItemFeature } from \"./features/item/Item\";\nimport { UserFeature } from \"./features/user/User\";\nimport { DefaultFeature } from \"./features/default/Default\";\n\nimport Navigation from \"./components/Navigation\";\nimport About from \"./components/About\";\nimport NoMatch from \"./components/NoMatch\";\n\nconst root: JSX.Element = (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Navigation />\n        <main>\n          <div className=\"max-w-screen-lg my-4 mx-auto\">\n            <Switch>\n              <Route exact path={`/`} component={DefaultFeature} />\n              <Route path={`${\"\"}/item/:id`} component={ItemFeature} />\n              <Route path={`${\"\"}/user/:id`} component={UserFeature} />\n              <Route\n                path={`/news/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"news\" />}\n              />\n              <Route\n                path={`${\"\"}/newest/:page?`}\n                render={(props) => (\n                  <CollectionFeature {...props} type=\"newest\" />\n                )}\n              />\n              <Route\n                path={`${\"\"}/show/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"show\" />}\n              />\n              <Route\n                path={`${\"\"}/ask/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"ask\" />}\n              />\n              <Route\n                path={`${\"\"}/jobs/:page?`}\n                render={(props) => <CollectionFeature {...props} type=\"jobs\" />}\n              />\n              <Route\n                path={`${\"\"}/business/:page?`}\n                render={(props) => (\n                  <CollectionFeature {...props} type=\"business\" />\n                )}\n              />\n              <Route exact path={`${\"\"}/about`} component={About} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(root, document.getElementById(\"root\"));\nserviceWorker.register();\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const DefaultFeature: React.FC = () => (\n  <Redirect to=\"/news/1\" />\n)","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getItem } from '../../features/item/itemSlice';\nimport Item from '../../components/Item';\n\nimport {\n    scrollToTop,\n    setTitle\n} from '../../helpers';\n\nexport const ItemFeature = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const { item, isFetching } = useSelector((state: RootState) => state.items);\n\n    useEffect(() => {\n        scrollToTop();\n      }, [])\n\n    useEffect(() => {\n    if (id) {\n        dispatch(getItem(id));\n    }\n    }, [id, dispatch])\n\n    useEffect(() => {\n        if (item && item.title) {\n          setTitle(item.title)\n        }\n      }, [item])\n\n    return (\n        <Item\n            item={item}\n            isFetching={isFetching}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../store';\nimport { getUser } from '../../features/user/userSlice';\nimport User from '../../components/User';\n\nexport const UserFeature = () => {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const { user: data } = useSelector((state: RootState) => state);\n\n    useEffect(() => {\n        if (id) {\n            dispatch(getUser(id))\n        }\n    }, [id, dispatch])\n\n    return (\n        <User\n            user={data.user}\n            isFetching={data.isFetching}\n        />\n    )\n}","import React, { useEffect } from 'react';\nimport { setTitle } from '../../helpers';\nimport raw from 'raw.macro';\nimport Markdown from 'react-remarkable';\nconst markdown = raw(\"../../../README.md\");\n\nexport const About: React.FC = () => {\n  useEffect(() => {\n    setTitle('about')\n  })\n\n  return (\n    <div className=\"About\">\n      <Markdown source={markdown} />\n      <p className=\"dark:text-white\">\n        View the source code on <a className=\"dark:hover:text-gray-700\" href=\"https://github.com/ptibbetts/reactHN\">GitHub</a>\n      </p>\n      <p className=\"dark:text-white\">\n        <a\n          className=\"<3\"\n          href=\"https://paultibbetts.uk\"\n        >\n          <span role=\"img\" aria-label=\"love\">💙</span>\n        </a>\n      </p>\n    </div>\n  )\n};","import React from 'react';\n\ninterface INoMatchProps {\n  location: {\n    pathname: string\n  }\n}\n\nexport const NoMatch = ({ location }: INoMatchProps) => (\n  <h1 className=\"font-bold text-gray-700 dark:text-white text-2xl\">Nothing was found for \"{location.pathname}\".</h1>\n);"],"sourceRoot":""}